let regex,synonyms,inflections,workerId="",inflectionCount=0,synonymCount=0,inflectionCharCount=0,synonymCharCount=0,contentCharCount=0;const reset=()=>{inflectionCount=0,synonymCount=0,inflectionCharCount=0,synonymCharCount=0,contentCharCount=0,regex=void 0,synonyms=void 0,inflections=void 0},normalizeSpacing=a=>a.replace(/(?!(\n+|\r)+)(&nbsp;|\s)+/gu," "),escapeRegex=a=>a.replace(/[-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g,"\\$&"),bewilderRegexNonWords=a=>/^(\P{XIDC})*(.*?)(\P{XIDC})*$/.exec(a.replace(/\P{XIDC}+/gu,"\\P{XIDC}+"))[2],escapeStr=(a,b)=>a.length?b?a.replace(/[&<>]/g,a=>({"&":"&amp;","<":"&lt;",">":"&gt;"})[a]):a.replace(/[&<>"']/g,a=>({"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#039;"})[a]):"",promiseLoop=(a,b,c=0,d=2e3)=>new Promise((e,f)=>{let g=a.length;if(!g)return e();const h=i=>{let j,k,l;d&&(k=setTimeout(()=>{clearTimeout(j),l=setTimeout(()=>{f()},250)},d)),j=setTimeout(()=>new Promise(async(c,d)=>{try{await b(a[i]),c()}catch(a){d()}}).then(()=>{if(d&&(clearTimeout(k),l)){if(i<g)return;clearTimeout(l)}++i===g?e():(j=null,h(i))}).catch(()=>{f()}),c)};h(0)}),countChars=a=>(a=a.match(/(?=([^<>]+))\1(?=<|$)/gi),a=a&&a.join(" ")||"",a=a.replace(/\s+/gu," "),+a.length||0),countWords=(a,b)=>{let c,d=bewilderRegexNonWords(escapeRegex(escapeStr(a,!0)));if(!d)return 0;for(let e=0;e<regex.length&&(c=/\/(.*)\/(.*)/.exec(regex[e]),b=b.match(new RegExp(c[1].replace(/\{\{kw\}\}/g,d),c[2].includes("u")?c[2]:`${c[2]}u`)),b&&e!==regex.length-1);e++)b=b.join(" ");return b?.length||0},stripWord=(a,b)=>b.replace(new RegExp(escapeRegex(escapeStr(a,!0)),"gi"),"/"),countCharacters=a=>new Promise(b=>{setTimeout(()=>{contentCharCount+=countChars(a),b()},5)}),countInflections=a=>{let b=inflections,c=a;return b.length&&b.sort((c,a)=>a.length-c.length),promiseLoop(b,a=>{let b=countWords(a,c);inflectionCount+=b,inflectionCharCount+=a.length*b,c=stripWord(a,c)},5,1e4)},countSynonyms=a=>{let b=synonyms,c=a;return b.length&&b.sort((c,a)=>a.length-c.length),promiseLoop(b,a=>{let b=countWords(a,c);synonymCount+=b,synonymCharCount+=a.length*b,c=stripWord(a,c)},5,1e4)};onmessage=a=>{workerId=a.data.id,reset();let b=a.data.data,c=normalizeSpacing(b.content);regex=b.regex,inflections=b.inflections,synonyms=b.synonyms,c?Promise.all([b.assess.getCharCount&&countCharacters(c),countInflections(c),countSynonyms(c)]).then(()=>{postMessage({inflectionCount,synonymCount,inflectionCharCount,synonymCharCount,contentCharCount})}).catch(a=>{postMessage({workerId,error:a})}):postMessage(void 0)},onerror=(a,b,c,d,e)=>{postMessage({workerId,error:e})};
