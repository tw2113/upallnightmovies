'use strict';window.tsfem_worker=function(){const a={},b={},c=(a,c)=>{"busy"===c?b[a]=!0:delete b[a]},d=a=>c(a,"clear"),e=a=>a in b,f=b=>b in a&&a[b]||void 0,g=b=>{a[b]&&(a[b].terminate(),d(b))};return Object.assign({load:()=>{}},{occupyWorker:a=>c(a,"busy"),freeWorker:d,isWorkerBusy:e,spawnWorker:(b,c)=>a[c]=new Worker(b),getWorker:f,stopWorker:g,despawnWorker:b=>{a[b]&&(g(b),delete a[b])},tellWorker:(a,b)=>new Promise((c,d)=>{const e=f(a);return e?void(e.onmessage=a=>"error"in a.data?d(a.data.error):c(a.data),e.onerror=a=>d(a),e.postMessage({id:a,data:b})):d("No worker available.")}),assignWorker:(a,b,c,d)=>{const e=f(a);return e?void(e.onmessage=c,e.onerror=d,e.postMessage({id:a,data:b})):d("No worker available.")}})}(),window.tsfem_worker.load();
